# Generated by Django 2.0.9 on 2019-01-15 22:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import dpnk.models.competition
import stdnumfield.models


class Migration(migrations.Migration):

    dependencies = [
        ('dpnk', '0122_userprofile_telephone_opt_in'),
    ]

    operations = [
        migrations.AlterField(
            model_name='campaign',
            name='track_required',
            field=models.BooleanField(default=False, verbose_name='Je povinné zadávat trasu'),
        ),
        migrations.AlterField(
            model_name='company',
            name='address_recipient',
            field=models.CharField(blank=True, default='', help_text='Vyplňte pouze pokud má Vaše pobočka kromě vlastní adresy také své oficiální jméno, které se liší od názvu společnosti.', max_length=50, null=True, verbose_name='Adresát na faktuře'),
        ),
        migrations.AlterField(
            model_name='company',
            name='ico',
            field=stdnumfield.models.StdNumField(alphabets=[None], blank=True, default=None, error_messages={'stdnum_format': 'IČO není zadáno ve správném formátu. Zkontrolujte že číslo má osm číslic a případně ho doplňte nulami zleva.'}, formats=['cz.dic'], null=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'IČO musí být číslo')], verbose_name='IČO'),
        ),
        migrations.AlterField(
            model_name='company',
            name='name',
            field=models.CharField(max_length=60, unique=True, verbose_name='Název společnosti'),
        ),
        migrations.AlterField(
            model_name='companyadmin',
            name='motivation_company_admin',
            field=models.TextField(blank=True, default='', help_text='Napište nám prosím, jakou zastáváte u Vašeho zaměstnavatele pozici', max_length=5000, null=True, verbose_name='Zaměstnanecká pozice'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='commute_modes',
            field=models.ManyToManyField(blank=True, default=dpnk.models.competition.default_commute_modes, help_text='Můžete vybrat víc položek pomocí klávesy control. Většina soutěží je vypsána jako kolo + pěšky', to='dpnk.CommuteMode', verbose_name='Způsoby dopravy'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='competitor_type',
            field=models.CharField(choices=[('single_user', 'Jednotliví soutěžící'), ('liberos', 'Liberos'), ('team', 'Týmy'), ('company', 'Soutěž organizací')], help_text='Určuje, zdali bude soutěž týmová, nebo pro jednotlivce. Ostatní volby vybírejte jen pokud víte, k čemu slouží.', max_length=16, verbose_name='Počet soutěžících'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='name',
            field=models.CharField(max_length=160, verbose_name='Název soutěže'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='sex',
            field=models.CharField(blank=True, choices=[('male', 'Muž'), ('female', 'Žena')], default=None, help_text='Pokud chcete oddělit výsledky pro muže a ženy, je potřeba vypsat dvě soutěže - jednu pro muže a druhou pro ženy. Jinak nechte prázdné.', max_length=50, null=True, verbose_name='Pohlaví soutěžících'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='url',
            field=models.URLField(blank=True, default='', help_text='Na webu budou podrobná pravidla o soutěži.', null=True, verbose_name='Odkaz na web soutěže'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='company_address_recipient',
            field=models.CharField(blank=True, default='', help_text='Vyplňte pouze pokud má Vaše pobočka kromě vlastní adresy také své oficiální jméno, které se liší od názvu společnosti.', max_length=50, null=True, verbose_name='Adresát na faktuře'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='pay_type',
            field=models.CharField(blank=True, choices=[('mp', 'mPenize - mBank'), ('kb', 'MojePlatba'), ('rf', 'ePlatby pro eKonto'), ('pg', 'GE Money Bank'), ('pv', 'Sberbank (Volksbank)'), ('pf', 'Fio banka'), ('cs', 'PLATBA 24 – Česká spořitelna'), ('era', 'Era - Poštovní spořitelna'), ('cb', 'ČSOB'), ('c', 'Kreditní karta přes GPE'), ('bt', 'bankovní převod'), ('pt', 'převod přes poštu'), ('sc', 'superCASH'), ('psc', 'PaySec'), ('mo', 'Mobito'), ('uc', 'UniCredit'), ('t', 'testovací platba'), ('fa', 'faktura mimo PayU'), ('fc', 'organizace platí fakturou'), ('am', 'člen Klubu přátel Auto*Matu'), ('amw', 'kandidát na členství v Klubu přátel Auto*Matu'), ('fe', 'neplatí startovné')], max_length=50, null=True, verbose_name='Typ platby'),
        ),
        migrations.AlterField(
            model_name='subsidiary',
            name='address_recipient',
            field=models.CharField(blank=True, default='', help_text='Vyplňte pouze pokud má Vaše pobočka kromě vlastní adresy také své oficiální jméno, které se liší od názvu společnosti.', max_length=50, null=True, verbose_name='Pracoviště'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='age_group',
            field=models.PositiveIntegerField(blank=True, choices=[(2019, 2019), (2018, 2018), (2017, 2017), (2016, 2016), (2015, 2015), (2014, 2014), (2013, 2013), (2012, 2012), (2011, 2011), (2010, 2010), (2009, 2009), (2008, 2008), (2007, 2007), (2006, 2006), (2005, 2005), (2004, 2004), (2003, 2003), (2002, 2002), (2001, 2001), (2000, 2000), (1999, 1999), (1998, 1998), (1997, 1997), (1996, 1996), (1995, 1995), (1994, 1994), (1993, 1993), (1992, 1992), (1991, 1991), (1990, 1990), (1989, 1989), (1988, 1988), (1987, 1987), (1986, 1986), (1985, 1985), (1984, 1984), (1983, 1983), (1982, 1982), (1981, 1981), (1980, 1980), (1979, 1979), (1978, 1978), (1977, 1977), (1976, 1976), (1975, 1975), (1974, 1974), (1973, 1973), (1972, 1972), (1971, 1971), (1970, 1970), (1969, 1969), (1968, 1968), (1967, 1967), (1966, 1966), (1965, 1965), (1964, 1964), (1963, 1963), (1962, 1962), (1961, 1961), (1960, 1960), (1959, 1959), (1958, 1958), (1957, 1957), (1956, 1956), (1955, 1955), (1954, 1954), (1953, 1953), (1952, 1952), (1951, 1951), (1950, 1950), (1949, 1949), (1948, 1948), (1947, 1947), (1946, 1946), (1945, 1945), (1944, 1944), (1943, 1943), (1942, 1942), (1941, 1941), (1940, 1940), (1939, 1939), (1938, 1938), (1937, 1937), (1936, 1936), (1935, 1935), (1934, 1934), (1933, 1933), (1932, 1932), (1931, 1931), (1930, 1930), (1929, 1929), (1928, 1928), (1927, 1927), (1926, 1926), (1925, 1925), (1924, 1924), (1923, 1923), (1922, 1922), (1921, 1921), (1920, 1920)], null=True, verbose_name='Ročník narození'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='language',
            field=models.CharField(choices=[('cs', 'Čeština'), ('en', 'Angličtna')], default='cs', help_text='V tomto jazyce Vám budou přicházet e-maily z registračního systému', max_length=16, verbose_name='Jazyk e-mailové komunikace'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='nickname',
            field=models.CharField(blank=True, help_text='Chcete zůstat inkognito? Soutěžní přezdívka se zobrazuje ve veřejných výsledcích místo Vašeho jména.', max_length=60, null=True, verbose_name='Přezdívka'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='occupation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dpnk.Occupation', verbose_name='Povolání'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='telephone',
            field=models.CharField(help_text='Ozveme se, až bude balíček nachystaný.', max_length=30, validators=[django.core.validators.RegexValidator('^[0-9+ ]*$', 'Jak se do lesa volá, když nemáme správné číslo? Zkontrolujte si prosím vyplněný telefon.'), django.core.validators.MinLengthValidator(9, message='Opravdu má Váš telefon %(show_value)s cifer?')], verbose_name='Telefonní číslo'),
        ),
    ]
