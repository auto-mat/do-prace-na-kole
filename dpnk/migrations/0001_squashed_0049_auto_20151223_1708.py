# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-25 15:40
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import dpnk.models


class Migration(migrations.Migration):

    replaces = [('dpnk', '0001_initial'), ('dpnk', '0002_auto_20150106_1045'), ('dpnk', '0003_remove_team_coordinator_campaign'), ('dpnk', '0004_auto_20150109_1307'), ('dpnk', '0005_auto_20150109_1317'), ('dpnk', '0006_auto_20150126_1732'), ('dpnk', '0007_auto_20150212_1526'), ('dpnk', '0008_auto_20150216_0903'), ('dpnk', '0009_auto_20150219_2229'), ('dpnk', '0010_auto_20150223_0914'), ('dpnk', '0011_campaign_minimum_rides_base'), ('dpnk', '0012_campaign_minimum_percentage'), ('dpnk', '0013_auto_20150227_0807'), ('dpnk', '0014_campaign_previous_campaign'), ('dpnk', '0015_city_cyklistesobe_slug'), ('dpnk', '0016_auto_20150304_2147'), ('dpnk', '0017_auto_20150314_0800'), ('dpnk', '0018_auto_20150316_1546'), ('dpnk', '0019_auto_20150325_1450'), ('dpnk', '0020_campaign_package_weight'), ('dpnk', '0021_auto_20150330_1530'), ('dpnk', '0022_auto_20150331_1132'), ('dpnk', '0023_auto_20150331_1137'), ('dpnk', '0024_auto_20150402_1350'), ('dpnk', '0025_auto_20150410_2158'), ('dpnk', '0026_transform'), ('dpnk', '0027_transform'), ('dpnk', '0028_auto_20150421_1141'), ('dpnk', '0029_auto_20150421_1349'), ('dpnk', '0030_auto_20150422_1637'), ('dpnk', '0031_auto_20150422_1730'), ('dpnk', '0032_auto_20150422_1731'), ('dpnk', '0033_remove_competition_city'), ('dpnk', '0034_auto_20150427_1352'), ('dpnk', '0035_auto_20150430_1222'), ('dpnk', '0036_voucher'), ('dpnk', '0037_auto_20150504_1647'), ('dpnk', '0038_auto_20150515_1659'), ('dpnk', '0039_line_to_multiline'), ('dpnk', '0040_auto_20150515_1729'), ('dpnk', '0041_auto_20150521_1629'), ('dpnk', '0042_auto_20150521_1629'), ('dpnk', '0043_auto_20150521_1629'), ('dpnk', '0044_auto_20150521_1822'), ('dpnk', '0045_cityincampaign_allow_adding_rides'), ('dpnk', '0046_auto_20150601_1631'), ('dpnk', '0047_auto_20151111_1234'), ('dpnk', '0048_auto_20151202_1733'), ('dpnk', '0049_auto_20151223_1708')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, max_length=600, null=True, verbose_name='Komentář')),
                ('points_given', models.IntegerField(blank=True, default=None, null=True)),
                ('attachment', models.FileField(blank=True, max_length=600, upload_to='questionaire/')),
            ],
            options={
                'verbose_name_plural': 'Odpovědi',
                'verbose_name': 'Odpověď',
                'ordering': ('user_attendance__team__subsidiary__city', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Jméno kampaně')),
                ('slug', models.SlugField(default='', unique=True, verbose_name='Doména v URL')),
                ('email_footer', models.TextField(blank=True, default='', max_length=5000, null=True, verbose_name='Patička uživatelských emailů')),
                ('mailing_list_id', models.CharField(blank=True, default='', max_length=60, verbose_name='ID mailing listu')),
                ('mailing_list_enabled', models.BooleanField(default=False, verbose_name='Povolit mailing list')),
                ('minimum_rides_base', models.PositiveIntegerField(default=25, help_text='Minimální počet jízd, které je nutné si zapsat, aby bylo možné dosáhnout 100% jízd', verbose_name='Minimální základ počtu jízd')),
                ('minimum_percentage', models.PositiveIntegerField(default=66, verbose_name='Minimální procento pro kvalifikaci do pravidelnostní soutěže')),
                ('trip_plus_distance', models.PositiveIntegerField(blank=True, default=5, help_text='Počet kilometrů, o které je možné prodloužit si jednu jízdu', null=True, verbose_name='Maximální navýšení vzdálenosti')),
                ('tracking_number_first', models.PositiveIntegerField(default=0, verbose_name='První číslo řady pro doručování balíčků')),
                ('tracking_number_last', models.PositiveIntegerField(default=999999999, verbose_name='Poslední číslo řady pro doručování balíčků')),
                ('package_height', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Výška balíku')),
                ('package_width', models.PositiveIntegerField(blank=True, default=26, null=True, verbose_name='Šířka balíku')),
                ('package_depth', models.PositiveIntegerField(blank=True, default=35, null=True, verbose_name='Hloubka balíku')),
                ('package_weight', models.FloatField(blank=True, default=0.25, null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)], verbose_name='Váha balíku')),
                ('invoice_sequence_number_first', models.PositiveIntegerField(default=0, verbose_name='První číslo řady pro faktury')),
                ('invoice_sequence_number_last', models.PositiveIntegerField(default=999999999, verbose_name='Poslední číslo řady pro faktury')),
                ('admission_fee', models.FloatField(default=0, verbose_name='Včasné startovné')),
                ('admission_fee_company', models.FloatField(default=0, verbose_name='Včasné startovné pro firmy')),
                ('late_admission_fee', models.FloatField(default=0, verbose_name='Pozdní startovné')),
                ('late_admission_fee_company', models.FloatField(default=0, verbose_name='Pozdní startovné pro firmy')),
                ('benefitial_admission_fee', models.FloatField(default=0, verbose_name='Benefiční startovné')),
                ('free_entry_cases_html', models.TextField(blank=True, null=True, verbose_name='Případy, kdy je startovné zdarma')),
                ('previous_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Předchozí kampaň')),
            ],
            options={
                'verbose_name_plural': 'kampaně',
                'verbose_name': 'kampaň',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(db_index=True, max_length=250, verbose_name='Nabídka')),
                ('points', models.IntegerField(blank=True, default=None, null=True, verbose_name='Body')),
            ],
            options={
                'verbose_name_plural': 'Nabídky k anketním otázkám',
                'verbose_name': 'Nabídka k anketním otázce',
            },
        ),
        migrations.CreateModel(
            name='ChoiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, null=True, unique=True, verbose_name='Jméno')),
                ('universal', models.BooleanField(default=False, verbose_name='Typ volby je použitelný pro víc otázek')),
            ],
            options={
                'verbose_name_plural': 'Typ volby',
                'verbose_name': 'Typ volby',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Jméno')),
                ('slug', models.SlugField(unique=True, verbose_name='Subdoména v URL')),
                ('cyklistesobe_slug', models.CharField(max_length=40, null=True, verbose_name='Jméno skupiny na webu Cyklisté sobě')),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name='poloha města')),
            ],
            options={
                'verbose_name_plural': 'Města',
                'verbose_name': 'Město',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CityInCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_adding_rides', models.BooleanField(default=True, verbose_name='povolit zapisování jízd')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.City')),
            ],
            options={
                'verbose_name_plural': 'Města v kampani',
                'verbose_name': 'Město v kampani',
                'ordering': ('campaign', 'city__name'),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Např. Výrobna, a.s., Příspěvková, p.o., Nevládka, o.s., Univerzita Karlova', max_length=60, unique=True, verbose_name='Název společnosti')),
                ('address_street', models.CharField(default='', help_text='Např. Šeříková nebo Nám. W. Churchilla', max_length=50, verbose_name='Ulice')),
                ('address_street_number', models.CharField(default='', help_text='Např. 2965/12 nebo 156', max_length=10, verbose_name='Číslo domu')),
                ('address_recipient', models.CharField(blank=True, default='', help_text='Např. odštěpný závod Brno, oblastní pobočka Liberec, Přírodovědecká fakulta atp.', max_length=50, null=True, verbose_name='Název společnosti (pobočky, závodu, kanceláře, fakulty) na adrese')),
                ('address_district', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Městská část')),
                ('address_psc', models.IntegerField(default=None, help_text='Např.: 130 00', null=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(10000)], verbose_name='PSČ')),
                ('address_city', models.CharField(default='', help_text='Např. Jablonec n. N. nebo Praha 3-Žižkov', max_length=50, verbose_name='Město')),
                ('ico', models.PositiveIntegerField(default=None, null=True, verbose_name='IČO')),
                ('dic', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='DIČ')),
                ('active', models.BooleanField(default=True, verbose_name='Aktivní')),
            ],
            options={
                'verbose_name_plural': 'Firmy',
                'verbose_name': 'Firma',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CompanyAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_admin_approved', models.CharField(choices=[('approved', 'Odsouhlasený'), ('undecided', 'Nerozhodnuto'), ('denied', 'Zamítnutý')], default='undecided', max_length=16, verbose_name='Správcovství organizace schváleno')),
                ('motivation_company_admin', models.TextField(blank=True, default='', help_text='Napište nám prosím, jakou zastáváte u Vašeho zaměstnavatele pozici', max_length=5000, null=True, verbose_name='Zaměstnanecká pozice')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Interní poznámka')),
                ('can_confirm_payments', models.BooleanField(default=False, verbose_name='Může potvrzovat platby')),
                ('administrated_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_admin', to='dpnk.Company', verbose_name='Administrovaná společnost')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_admin', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Firemní koordinátoři',
                'verbose_name': 'Firemní koordinátor',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160, verbose_name='Jméno soutěže')),
                ('slug', models.SlugField(default='', unique=True, verbose_name='Doména v URL')),
                ('url', models.URLField(blank=True, default='', help_text='Odkaz na stránku, kde budou pravidla a podrobné informace o soutěži', null=True, verbose_name='Odkaz na stránku soutěže')),
                ('date_from', models.DateField(blank=True, default=None, help_text='Od tohoto data se počítají jízdy', null=True, verbose_name='Datum začátku soutěže')),
                ('date_to', models.DateField(blank=True, default=None, help_text='Po tomto datu nebude možné soutěžit (vyplňovat dotazník)', null=True, verbose_name='Datum konce soutěže')),
                ('type', models.CharField(choices=[('length', 'Ujetá vzdálenost'), ('frequency', 'Pravidelnost jízd na kole'), ('questionnaire', 'Dotazník')], help_text='Určuje, zdali bude soutěž výkonnostní (na ujetou vzdálenost), nebo na pravidelnost. Volba "Dotazník" slouží pro kreativní soutěže, cyklozaměstnavatele roku a další dotazníky; je nutné definovat otázky.', max_length=16, verbose_name='Typ')),
                ('competitor_type', models.CharField(choices=[('single_user', 'Jednotliví soutěžící'), ('liberos', 'Liberos'), ('team', 'Týmy'), ('company', 'Soutěž firem')], help_text='Určuje, zdali bude soutěž týmová, nebo pro jednotlivce. Ostatní volby vybírejte jen pokud víte, k čemu slouží.', max_length=16, verbose_name='Typ soutěžícího')),
                ('sex', models.CharField(blank=True, choices=[('unknown', '-------'), ('male', 'Muž'), ('female', 'Žena')], default=None, help_text='Pokud chcete oddělit výsledky pro muže a ženy, je potřeba vypsat dvě soutěže - jednu pro muže a druhou pro ženy. Jinak nechte prázdné.', max_length=50, null=True, verbose_name='Soutěž pouze pro pohlaví')),
                ('without_admission', models.BooleanField(default=True, help_text='Dotazník je obvykle na přihlášky, výkonnost také a pravidelnost bez nich.', verbose_name='Soutěž bez přihlášek (pro všechny)')),
                ('public_answers', models.BooleanField(default=False, verbose_name='Zveřejňovat soutěžní odpovědi')),
                ('is_public', models.BooleanField(default=True, verbose_name='Soutěž je veřejná')),
                ('entry_after_beginning_days', models.IntegerField(default=7, help_text='Počet dní po začátku soutěže, kdy je ještě možné se přihlásit', verbose_name='Prodloužené přihlášky')),
                ('rules', models.TextField(blank=True, default=None, null=True, verbose_name='Pravidla soutěže')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
                ('city', models.ManyToManyField(blank=True, help_text='Soutěž bude probíhat ve vybraných městech. Pokud zůstane prázdné, soutěž probíhá ve všech městech.', to='dpnk.City', verbose_name='Soutěž pouze pro města')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.Company', verbose_name='Soutěž pouze pro firmu')),
                ('company_competitors', models.ManyToManyField(blank=True, related_name='competitions', to='dpnk.Company', verbose_name='Přihlášené soutěžící firmy')),
            ],
            options={
                'verbose_name_plural': 'Soutěže',
                'verbose_name': 'Soutěž',
                'ordering': ('-campaign', 'type', 'name'),
            },
        ),
        migrations.CreateModel(
            name='CompetitionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(blank=True, db_index=True, default=None, null=True, verbose_name='Výsledek')),
                ('company', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_results', to='dpnk.Company')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='dpnk.Competition')),
            ],
            options={
                'verbose_name_plural': 'Výsledky soutěží',
                'verbose_name': 'Výsledek soutěže',
            },
        ),
        migrations.CreateModel(
            name='DeliveryBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now, verbose_name='Datum vytvoření')),
                ('customer_sheets', models.FileField(blank=True, null=True, upload_to='customer_sheets', verbose_name='Zákaznické listy')),
                ('tnt_order', models.FileField(blank=True, null=True, upload_to='tnt_order', verbose_name='Objednávka pro TNT')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliverybatch_create', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliverybatch_update', to=settings.AUTH_USER_MODEL, verbose_name='last updated by')),
            ],
            options={
                'verbose_name_plural': 'Dávky objednávek',
                'verbose_name': 'Dávka objednávek',
            },
        ),
        migrations.CreateModel(
            name='GpxFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, help_text='Zadat trasu nahráním souboru GPX', null=True, upload_to=dpnk.models.normalize_gpx_filename, verbose_name='GPX soubor')),
                ('trip_date', models.DateField(verbose_name='Datum vykonání cesty')),
                ('direction', models.CharField(choices=[('trip_to', 'Tam'), ('trip_from', 'Zpět')], max_length=50, verbose_name='Směr cesty')),
                ('track', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, geography=True, null=True, srid=4326, verbose_name='trasa')),
                ('from_application', models.BooleanField(default=False, verbose_name='Nahráno z aplikace')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Datum vytvoření')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Datum poslední změny')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gpxfile_create', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'verbose_name_plural': 'GPX soubory',
                'verbose_name': 'GPX soubor',
                'ordering': ('trip_date', 'direction'),
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now, verbose_name='Datum vytvoření')),
                ('exposure_date', models.DateField(default=datetime.date.today, null=True, verbose_name='Den vystavení daňového dokladu')),
                ('taxable_date', models.DateField(default=datetime.date.today, null=True, verbose_name='Den uskutečnění zdanitelného plnění')),
                ('paid_date', models.DateField(blank=True, default=None, null=True, verbose_name='Datum zaplacení')),
                ('company_pais_benefitial_fee', models.BooleanField(default=False, verbose_name='Moje firma si přeje podpořit Auto*Mat a zaplatit benefiční startovné (450 Kč za osobu).')),
                ('total_amount', models.FloatField(default=0, verbose_name='Celková částka')),
                ('invoice_pdf', models.FileField(blank=True, null=True, upload_to='invoices', verbose_name='PDF faktury')),
                ('sequence_number', models.PositiveIntegerField(verbose_name='Pořadové číslo faktury')),
                ('order_number', models.BigIntegerField(blank=True, null=True, verbose_name='Číslo objednávky (nepovinné)')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoice_create', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Company', verbose_name='Společnost')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoice_update', to=settings.AUTH_USER_MODEL, verbose_name='last updated by')),
            ],
            options={
                'verbose_name_plural': 'Faktury',
                'verbose_name': 'Faktura',
            },
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('registration', 'registrační'), ('late_admission', 'pozdní startovné'), ('compet_entry', 'vstup do soutěže (zastaralé)'), ('payment', 'placení startovného'), ('competition', 'soutěžní'), ('results', 'výsledková'), ('admissions', 'přihlašovací do soutěží'), ('invoices', 'vytváření faktur')], default='registration', max_length=16, verbose_name='Typ fáze')),
                ('date_from', models.DateField(blank=True, default=None, null=True, verbose_name='Datum začátku fáze')),
                ('date_to', models.DateField(blank=True, default=None, null=True, verbose_name='Datum konce fáze')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
            ],
            options={
                'verbose_name_plural': 'fáze kampaně',
                'verbose_name': 'fáze kampaně',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Jméno')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Otázka')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Den')),
                ('type', models.CharField(choices=[('text', 'Text'), ('choice', 'Výběr odpovědi'), ('multiple-choice', 'Výběr z více odpovědí')], default='text', max_length=16, verbose_name='Typ')),
                ('comment_type', models.CharField(blank=True, choices=[(None, 'Nic'), ('text', 'Text'), ('link', 'Odkaz'), ('one-liner', 'Jeden řádek textu')], default=None, max_length=16, null=True, verbose_name='Typ komentáře')),
                ('with_attachment', models.BooleanField(default=False, verbose_name='Povolit přílohu')),
                ('order', models.IntegerField(blank=True, null=True, verbose_name='Pořadí')),
                ('required', models.BooleanField(default=True, verbose_name='Povinná otázka')),
                ('choice_type', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.ChoiceType', verbose_name='Typ volby')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Competition', verbose_name='Soutěž')),
            ],
            options={
                'verbose_name_plural': 'Anketní otázky',
                'verbose_name': 'Anketní otázka',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Subsidiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_street', models.CharField(default='', help_text='Např. Šeříková nebo Nám. W. Churchilla', max_length=50, verbose_name='Ulice')),
                ('address_street_number', models.CharField(default='', help_text='Např. 2965/12 nebo 156', max_length=10, verbose_name='Číslo domu')),
                ('address_recipient', models.CharField(blank=True, default='', help_text='Např. odštěpný závod Brno, oblastní pobočka Liberec, Přírodovědecká fakulta atp.', max_length=50, null=True, verbose_name='Název společnosti (pobočky, závodu, kanceláře, fakulty) na adrese')),
                ('address_district', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Městská část')),
                ('address_psc', models.IntegerField(default=None, help_text='Např.: 130 00', null=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(10000)], verbose_name='PSČ')),
                ('address_city', models.CharField(default='', help_text='Např. Jablonec n. N. nebo Praha 3-Žižkov', max_length=50, verbose_name='Město')),
                ('active', models.BooleanField(default=True, verbose_name='Aktivní')),
                ('city', models.ForeignKey(help_text="Rozhoduje o tom, kde budete soutěžit - vizte <a href='http://www.dopracenakole.net/pravidla' target='_blank'>pravidla soutěže</a>", on_delete=django.db.models.deletion.CASCADE, to='dpnk.City', verbose_name='Soutěžní město')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsidiaries', to='dpnk.Company')),
            ],
            options={
                'verbose_name_plural': 'Pobočky firem',
                'verbose_name': 'Pobočka firmy',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Název týmu')),
                ('invitation_token', models.CharField(default='', max_length=100, unique=True, validators=[dpnk.models.validate_length], verbose_name='Token pro pozvánky')),
                ('member_count', models.IntegerField(db_index=True, default=0, verbose_name='Počet právoplatných členů týmu')),
                ('get_rides_count_denorm', models.IntegerField(editable=False, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
                ('subsidiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='dpnk.Subsidiary', verbose_name='Pobočka')),
            ],
            options={
                'verbose_name_plural': 'Týmy',
                'verbose_name': 'Tým',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(default=0, verbose_name='Status')),
                ('created', models.DateTimeField(default=datetime.datetime.now, verbose_name='Vytvoření')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Popis')),
                ('realized', models.DateTimeField(blank=True, null=True, verbose_name='Realizace')),
            ],
            options={
                'verbose_name_plural': 'Transakce',
                'verbose_name': 'Transakce',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_working_ride_to', models.BooleanField(default=False, verbose_name='pracovní cesta do práce')),
                ('is_working_ride_from', models.BooleanField(default=False, verbose_name='pracovní cesta z práce')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Datum cesty')),
                ('trip_to', models.NullBooleanField(default=None, verbose_name='Cesta do práce')),
                ('trip_from', models.NullBooleanField(default=None, verbose_name='Cesta z práce')),
                ('distance_to', models.FloatField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)], verbose_name='Ujetá vzdálenost do práce')),
                ('distance_from', models.FloatField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(0)], verbose_name='Ujetá vzdálenost z práce')),
            ],
            options={
                'verbose_name_plural': 'Cesty',
                'verbose_name': 'Cesta',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='TShirtSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Velikost trička')),
                ('order', models.PositiveIntegerField(default=0)),
                ('ship', models.BooleanField(default=True, verbose_name='Posílá se?')),
                ('available', models.BooleanField(default=True, help_text='Zobrazuje se v nabídce trik', verbose_name='Je dostupné?')),
                ('t_shirt_preview', models.FileField(blank=True, null=True, upload_to='t_shirt_preview', verbose_name='Náhled trika')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
            ],
            options={
                'verbose_name_plural': 'Velikosti trička',
                'verbose_name': 'Velikost trička',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(blank=True, default=None, help_text='Průměrná ujetá vzdálenost z domova do práce (v km v jednom směru)', null=True, verbose_name='Vzdálenost')),
                ('track', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, geography=True, help_text='\n<ul>\n   <li><strong>Zadávání trasy zahájíte kliknutím na tlačítko "Nakreslit trasu".</strong></li>\n   <li>Změnu trasy provedete po přepnutí do režimu úprav kliknutím na trasu.</li>\n   <li>Trasu stačí zadat tak, že bude zřejmé, kterými ulicemi vede.</li>\n   <li>Zadání přesnějšího průběhu nám však může pomoci lépe zjistit jak se lidé na kole pohybují.</li>\n   <li>Trasu bude možné změnit nebo upřesnit i později v průběhu soutěže.</li>\n   <li>Polohu začátku a konce trasy stačí zadávat s přesností 100m.</li>\n</ul>\nTrasa slouží k výpočtu vzdálenosti a pomůže nám lépe určit potřeby lidí pohybuících se ve městě na kole. Vaše cesta se zobrazí vašim týmovým kolegům.\n<br/>Trasy všech účastníků budou v anonymizované podobě zobrazené na úvodní stránce.\n', null=True, srid=4326, verbose_name='trasa')),
                ('dont_want_insert_track', models.BooleanField(default=False, verbose_name='Nepřeji si zadávat svoji trasu.')),
                ('approved_for_team', models.CharField(choices=[('approved', 'Odsouhlasený'), ('undecided', 'Nerozhodnuto'), ('denied', 'Zamítnutý')], default='undecided', max_length=16, verbose_name='Souhlas týmu')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Datum vytvoření')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Datum poslední změny')),
                ('get_rides_count_denorm', models.IntegerField(editable=False, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Campaign', verbose_name='Kampaň')),
                ('t_shirt_size', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.TShirtSize', verbose_name='Velikost trička')),
                ('team', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='dpnk.Team', verbose_name='Tým')),
            ],
            options={
                'verbose_name_plural': 'Účastníci kampaně',
                'verbose_name': 'Účastník kampaně',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, help_text='Zobrazí se ve všech veřejných výpisech místo vašeho jména. Zadávejte takové jméno, podle kterého vás vaši kolegové poznají', max_length=60, null=True, verbose_name='Zobrazené jméno')),
                ('telephone', models.CharField(max_length=30, verbose_name='Telefon')),
                ('language', models.CharField(choices=[('cs', 'Čeština'), ('en', 'Angličtna')], default='cs', help_text='Jazyk, ve kterém vám budou docházet emaily z registračního systému', max_length=16, verbose_name='Jazyk emailů')),
                ('mailing_id', models.CharField(blank=True, db_index=True, default=None, max_length=128, null=True, verbose_name='ID uživatele v mailing listu')),
                ('mailing_hash', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='Hash poslední synchronizace s mailingem')),
                ('sex', models.CharField(choices=[('unknown', '-------'), ('male', 'Muž'), ('female', 'Žena')], default='unknown', help_text='Slouží k zařazení do výkonnostních kategorií', max_length=50, verbose_name='Pohlaví')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Interní poznámka')),
                ('mailing_opt_in', models.NullBooleanField(default=None, help_text='Odběr emailů můžete kdykoliv v průběhu soutěže zrušit.', verbose_name='Přeji si dostávat emailem informace o akcích, událostech a dalších informacích souvisejících se soutěží.')),
                ('administrated_cities', models.ManyToManyField(blank=True, related_name='city_admins', to='dpnk.City')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Uživatelské profily',
                'verbose_name': 'Uživatelský profil',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('rekola', 'ReKola')], default='rekola', max_length=10, verbose_name='typ voucheru')),
                ('token', models.TextField(null=True, verbose_name='token')),
                ('user_attendance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.UserAttendance')),
            ],
            options={
                'verbose_name_plural': 'Vouchery',
                'verbose_name': 'Voucher',
            },
        ),
        migrations.CreateModel(
            name='CommonTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpnk.Transaction')),
            ],
            options={
                'verbose_name_plural': 'Obecné transakce',
                'verbose_name': 'Obecná transakce',
            },
            bases=('dpnk.transaction',),
        ),
        migrations.CreateModel(
            name='PackageTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpnk.Transaction')),
                ('tracking_number', models.PositiveIntegerField(unique=True, verbose_name='Tracking number TNT')),
                ('delivery_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.DeliveryBatch', verbose_name='Dávka objednávek')),
            ],
            options={
                'verbose_name_plural': 'Transakce balíku',
                'verbose_name': 'Transakce balíku',
            },
            bases=('dpnk.transaction',),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpnk.Transaction')),
                ('order_id', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Order ID')),
                ('session_id', models.CharField(blank=True, default=None, max_length=50, null=True, unique=True, verbose_name='Session ID')),
                ('trans_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Transaction ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Částka')),
                ('pay_type', models.CharField(blank=True, choices=[('mp', 'mPenize - mBank'), ('kb', 'MojePlatba'), ('rf', 'ePlatby pro eKonto'), ('pg', 'GE Money Bank'), ('pv', 'Sberbank (Volksbank)'), ('pf', 'Fio banka'), ('cs', 'PLATBA 24 – Česká spořitelna'), ('era', 'Era - Poštovní spořitelna'), ('cb', 'ČSOB'), ('c', 'Kreditní karta přes GPE'), ('bt', 'bankovní převod'), ('pt', 'převod přes poštu'), ('sc', 'superCASH'), ('psc', 'PaySec'), ('mo', 'Mobito'), ('t', 'testovací platba'), ('fa', 'faktura mimo PayU'), ('fc', 'firma platí fakturou'), ('am', 'člen Klubu přátel Auto*Matu'), ('amw', 'kandidát na členství v Klubu přátel Auto*Matu'), ('fe', 'neplatí startovné')], max_length=50, null=True, verbose_name='Typ platby')),
                ('error', models.PositiveIntegerField(blank=True, null=True, verbose_name='Chyba')),
                ('invoice', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_set', to='dpnk.Invoice')),
            ],
            options={
                'verbose_name_plural': 'Platební transakce',
                'verbose_name': 'Platební transakce',
            },
            bases=('dpnk.transaction',),
        ),
        migrations.CreateModel(
            name='UserActionTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dpnk.Transaction')),
            ],
            options={
                'verbose_name_plural': 'Uživatelské akce',
                'verbose_name': 'Uživatelská akce',
            },
            bases=('dpnk.transaction',),
        ),
        migrations.AddField(
            model_name='userattendance',
            name='userprofile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userattendance_set', to='dpnk.UserProfile', verbose_name='Uživatelský profil'),
        ),
        migrations.AddField(
            model_name='trip',
            name='user_attendance',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_trips', to='dpnk.UserAttendance'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_create', to=settings.AUTH_USER_MODEL, verbose_name='author'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_dpnk.transaction_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_update', to=settings.AUTH_USER_MODEL, verbose_name='last updated by'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='user_attendance',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='dpnk.UserAttendance'),
        ),
        migrations.AddField(
            model_name='gpxfile',
            name='trip',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.Trip'),
        ),
        migrations.AddField(
            model_name='gpxfile',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gpxfile_update', to=settings.AUTH_USER_MODEL, verbose_name='last updated by'),
        ),
        migrations.AddField(
            model_name='gpxfile',
            name='user_attendance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.UserAttendance'),
        ),
        migrations.AddField(
            model_name='competitionresult',
            name='team',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitions_results', to='dpnk.Team'),
        ),
        migrations.AddField(
            model_name='competitionresult',
            name='user_attendance',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitions_results', to='dpnk.UserAttendance'),
        ),
        migrations.AddField(
            model_name='competition',
            name='team_competitors',
            field=models.ManyToManyField(blank=True, related_name='competitions', to='dpnk.Team', verbose_name='Přihlášené soutěžící týmy'),
        ),
        migrations.AddField(
            model_name='competition',
            name='user_attendance_competitors',
            field=models.ManyToManyField(blank=True, related_name='competitions', to='dpnk.UserAttendance', verbose_name='Přihlášení soutěžící jednotlivci'),
        ),
        migrations.AddField(
            model_name='choicetype',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Competition'),
        ),
        migrations.AddField(
            model_name='choice',
            name='choice_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choicetype_set', to='dpnk.ChoiceType', verbose_name='Typ volby'),
        ),
        migrations.AddField(
            model_name='answer',
            name='choices',
            field=models.ManyToManyField(blank=True, to='dpnk.Choice'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpnk.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user_attendance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.UserAttendance'),
        ),
        migrations.CreateModel(
            name='SubsidiaryInCampaign',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('dpnk.subsidiary',),
        ),
        migrations.CreateModel(
            name='TeamInCampaign',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('dpnk.team',),
        ),
        migrations.CreateModel(
            name='TeamName',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('dpnk.team',),
        ),
        migrations.CreateModel(
            name='UserAttendanceRelated',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('dpnk.userattendance',),
        ),
        migrations.CreateModel(
            name='UserAttendanceToBatch',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Uživatelé na dávku objednávek',
                'verbose_name': 'Uživatel na dávku objednávek',
                'proxy': True,
            },
            bases=('dpnk.userattendance',),
        ),
        migrations.AlterUniqueTogether(
            name='userattendance',
            unique_together=set([('userprofile', 'campaign')]),
        ),
        migrations.AlterUniqueTogether(
            name='tshirtsize',
            unique_together=set([('name', 'campaign')]),
        ),
        migrations.AlterUniqueTogether(
            name='trip',
            unique_together=set([('user_attendance', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together=set([('name', 'campaign')]),
        ),
        migrations.AlterUniqueTogether(
            name='phase',
            unique_together=set([('type', 'campaign')]),
        ),
        migrations.AddField(
            model_name='packagetransaction',
            name='t_shirt_size',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dpnk.TShirtSize', verbose_name='Velikost trička'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together=set([('sequence_number', 'campaign')]),
        ),
        migrations.AlterUniqueTogether(
            name='gpxfile',
            unique_together=set([('trip', 'direction'), ('user_attendance', 'trip_date', 'direction')]),
        ),
        migrations.AlterUniqueTogether(
            name='competitionresult',
            unique_together=set([('team', 'competition'), ('user_attendance', 'competition')]),
        ),
        migrations.AlterUniqueTogether(
            name='companyadmin',
            unique_together=set([('administrated_company', 'campaign'), ('user', 'campaign')]),
        ),
        migrations.AlterUniqueTogether(
            name='cityincampaign',
            unique_together=set([('city', 'campaign')]),
        ),
        migrations.AlterUniqueTogether(
            name='choicetype',
            unique_together=set([('competition', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='choice',
            unique_together=set([('choice_type', 'text')]),
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together=set([('user_attendance', 'question')]),
        ),
    ]
