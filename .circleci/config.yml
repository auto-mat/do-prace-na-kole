version: 2
jobs:
  build:
    working_directory: /home/aplikace
    docker:
      - image: python:3.5

    steps:
      - checkout
      - run: curl -sL https://deb.nodesource.com/setup_10.x | bash -
      - run: apt-get -qq update; apt-get -y install nodejs gettext libgettextpo-dev
      - run: npm install -g less bower
      - run: bower --allow-root install
      - run: pip install 'Django<2.1' "coveralls==1.5.1" django_coverage_plugin
      - run: django-admin compilemessages
      - run: cd dpnk/static/css && lessc style.less style.css
      - run: echo "${CIRCLE_BRANCH} 2017.${CIRCLE_BUILD_NUM}" > dpnk/static/version.txt
      - run: git rev-parse HEAD >> dpnk/static/version.txt
      - setup_remote_docker:
          reusable: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.03.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
         name: Build Docker image
         command: docker build -t dopracenakole .
      - run:
         name: Deploy test Docker image
         command: |
            if [ "$DOCKER_USER" != "" ] ; then
              TAG="$(date +Y).${CIRCLE_BUILD_NUM}"
              docker tag dopracenakole:latest auto0mat/dopracenakole-test:$TAG
              if [ "$CIRCLE_BRANCH" == "devel" ] ; then
                 docker tag dopracenakole:latest auto0mat/dopracenakole-test:latest
              fi
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push auto0mat/dopracenakole-test:$TAG
              if [ "$CIRCLE_BRANCH" == "devel" ] ; then
                 docker push auto0mat/dopracenakole-test:latest
              fi
            fi
      - run:
         name: Start PostGIS container
         command: |
            docker run -d --hostname dpnk-postgres --name dpnk-postgres -e POSTGRES_PASSWORD=password mdillon/postgis:9.6
      - run:
         name: Start RabbitMQ container
         command: |
            docker run -d --hostname dpnk-rabbit --name dpnk-rabbit rabbitmq
      - run:
         name: Test Docker container in Django 2.0
         command: |
            sleep 10
            docker run \
               --entrypoint="/home/aplikace/docker-test-entrypoint.sh" \
               --env DPNK_DB_HOST=postgres \
               --env DPNK_SECRET_KEY=secret \
               --env DPNK_DB_NAME=postgres \
               --env DPNK_DB_USER=postgres \
               --env DPNK_DB_PASSWORD=password \
               --env DPNK_BROKER_URL="amqp://rabbit" \
               --env DJANGO_VERSION="Django<2.1>=2.0" \
               --link dpnk-rabbit:rabbit \
               --link dpnk-postgres:postgres \
               --name dpnk-test \
               dopracenakole
      - run: docker cp dpnk-test:/home/aplikace/reports /tmp/reports
      - run: cp /tmp/reports/ . -R
      - run: cp /tmp/reports/.coverage .

      - store_artifacts:
          path: /tmp/reports
          destination: reports
